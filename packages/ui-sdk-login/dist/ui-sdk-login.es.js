class e extends HTMLElement{static get observedAttributes(){return["message","error"]}constructor(){super()}connectedCallback(){var e,t;this.innerHTML=`<div style="position: absolute; background: #1c1e2d; color: white; top: 0; left: 0; width: 100%; height: 100%; display: flex; align-items: center; justify-content: center;">\n    <div>Username: <input type="text" autocomplete="username" id="formant-login-username"/><br><br>Password: <input type="password" autocomplete="current-password" id="formant-login-password"/><br><br><button large style="width: 100%">Login</button><br><br>\n    <div><span id="formant-login-message" style="color: #bac4e2">${null!=(e=this.getAttribute("message"))?e:""}</span><span id="formant-login-error" style="color: #ea719d">${null!=(t=this.getAttribute("error"))?t:""}</span></div></div></div>`;const r=this.querySelector("#formant-login-username"),n=this.querySelector("#formant-login-password");this.querySelector("button").addEventListener("click",(()=>{this.dispatchEvent(new CustomEvent("login",{detail:{username:r.value,password:n.value}}))})),this.addEventListener("keyup",(function(e){13===e.keyCode&&this.dispatchEvent(new CustomEvent("login",{detail:{username:r.value,password:n.value}}))}))}attributeChangedCallback(e,t,r){if("message"===e){this.querySelector("#formant-login-message").innerHTML=r}if("error"===e){this.querySelector("#formant-login-error").innerHTML=r}}}customElements.define("formant-login",e);export{e as Login};
